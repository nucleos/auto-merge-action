{
    "name": "nucleos/auto-merge-action",
    "type": "project",
    "description": "Automerge labeled GitHub Pull Requests.",
    "keywords": [
        "console",
        "github",
        "merge",
        "automerge"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.0",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "knplabs/github-api": "^3.0",
        "nyholm/psr7": "^1.3",
        "psr/http-client": "^1.0",
        "symfony/console": "^5.2",
        "symfony/dotenv": "^5.2",
        "symfony/http-client": "^5.2",
        "symfony/string": "5.4.*",
        "webmozart/assert": "^1.9"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.3",
        "ergebnis/composer-normalize": "^2.13",
        "ergebnis/test-util": "^1.4"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "5.2.*"
        }
    },
    "autoload": {
        "psr-4": {
            "Nucleos\\AutoMergeAction\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Nucleos\\AutoMergeAction\\Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-install-cmd": [
            "@composer bin all install --ansi"
        ],
        "post-update-cmd": [
            "@composer bin all install --ansi"
        ],
        "coverage": "vendor/bin/phpunit --colors=always --coverage-clover=build/logs/clover.xml",
        "cs": "PHP_CS_FIXER_IGNORE_ENV=1 && vendor/bin/php-cs-fixer fix --verbose",
        "cs-diff": "PHP_CS_FIXER_IGNORE_ENV=1 && vendor/bin/php-cs-fixer fix  --verbose --diff --dry-run",
        "deps": "vendor/bin/composer-require-checker check --config-file composer-require.json composer.json",
        "infection": "vendor/bin/infection",
        "lint": [
            "find ./src \\( -name '*.xml' -or -name '*.xml.dist' -or -name '*.xlf' \\) -type f -exec xmllint --encode UTF-8 --output '{}' --format '{}' \\;",
            "find ./src \\( -name '*.yml' -or -name '*.yaml' \\) -not -path '*/vendor/*' | xargs yaml-lint"
        ],
        "phpmd": "vendor/bin/phpmd src,tests ansi phpmd.xml",
        "phpstan": "vendor/bin/phpstan analyse",
        "psalm": "vendor/bin/psalm",
        "test": "vendor/bin/phpunit --colors=always"
    }
}
